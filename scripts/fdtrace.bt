#!/usr/bin/bpftrace

// The formats can be queried like this:
// sudo cat /sys/kernel/debug/tracing/events/syscalls/sys_enter_close/format
//

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:const char * filename;	offset:16;	size:8;	signed:0;
// field:const char *const * argv;	offset:24;	size:8;	signed:0;
// field:const char *const * envp;	offset:32;	size:8;	signed:0;
tracepoint:syscalls:sys_enter_execve {
    printf("%lld;%d;%d;execve;%s\n", nsecs, pid, tid, str(args->filename));
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:const char * filename;	offset:16;	size:8;	signed:0;
// field:int flags;	offset:24;	size:8;	signed:0;
// field:umode_t mode;	offset:32;	size:8;	signed:0;
tracepoint:syscalls:sys_enter_open {
    printf("%lld;%d;%d;open;%s;%llu;%llu\n", nsecs, pid, tid, str(args->filename), args->flags, args->mode);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:int error_code;	offset:16;	size:8;	signed:0;
tracepoint:syscalls:sys_exit_open {
    // TODO: error_code is not signed?
    printf("%lld;%d;%d;open_exit;%lld\n", nsecs, pid, tid, args->ret);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:int dfd;	offset:16;	size:8;	signed:0;
// field:const char * filename;	offset:24;	size:8;	signed:0;
// field:int flags;	offset:32;	size:8;	signed:0;
// field:umode_t mode;	offset:40;	size:8;	signed:0;
tracepoint:syscalls:sys_enter_openat {
    printf("%lld;%d;%d;openat;%llu;%s;%llu\n", nsecs, pid, tid, args->dfd, str(args->filename), args->flags);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:long ret;	offset:16;	size:8;	signed:1;
tracepoint:syscalls:sys_exit_openat {
    printf("%lld;%d;%d;openat_exit;%lld\n", nsecs, pid, tid, args->ret);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:unsigned int fd;	offset:16;	size:8;	signed:0;
tracepoint:syscalls:sys_enter_close {
    printf("%lld;%d;%d;close;%llu\n", nsecs, pid, tid, args->fd);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:long ret;	offset:16;	size:8;	signed:1;
tracepoint:syscalls:sys_exit_close {
    printf("%lld;%d;%d;close_exit;%lld\n", nsecs, pid, tid, args->ret);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:unsigned int fd;	offset:16;	size:8;	signed:0;
// field:char * buf;	offset:24;	size:8;	signed:0;
// field:size_t count;	offset:32;	size:8;	signed:0;
tracepoint:syscalls:sys_enter_read {
    printf("%lld;%d;%d;read;%llu;%llu\n", nsecs, pid, tid, args->fd, args->count);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:long ret;	offset:16;	size:8;	signed:1;
tracepoint:syscalls:sys_exit_read {
    printf("%lld;%d;%d;read_exit;%lld\n", nsecs, pid, tid, args->ret);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:unsigned int fd;	offset:16;	size:8;	signed:0;
// field:const char * buf;	offset:24;	size:8;	signed:0;
// field:size_t count;	offset:32;	size:8;	signed:0;
tracepoint:syscalls:sys_enter_write {
    printf("%lld;%d;%d;write;%llu;%llu\n", nsecs, pid, tid, args->fd, args->count);
}

// field:int __syscall_nr;	offset:8;	size:4;	signed:1;
// field:long ret;	offset:16;	size:8;	signed:1;
tracepoint:syscalls:sys_exit_write {
    printf("%lld;%d;%d;write_exit;%lld\n", nsecs, pid, tid, args->ret);
}
